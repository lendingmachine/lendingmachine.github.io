{"version":3,"file":"component---src-templates-tags-template-js-de7cdbe7fa441b3dff07.js","mappings":"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","sources":["webpack://gatsby-starter-glass/./src/components/post-list.js","webpack://gatsby-starter-glass/./src/components/styled-link.js","webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/tags-template.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport Tags from \"./tags\";\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt }) => {\n    const { title, tags, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        title={title}\n        date={date}\n        slug={slug}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <StyledPostList>{PostList}</StyledPostList>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({ title, date, tags, excerpt, description, slug }) => {\n  return (\n    <StyledPostListItem>\n      <Tags tags={tags} />\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n      <PostListMeta>\n        <span>{date}</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  );\n};\n\nconst StyledPostList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n    }\n  }\n`;\n\nconst StyledPostListItem = styled.li`\n  display: flex;\n  padding: 1.5rem;\n  border-radius: 8px;\n  position: relative;\n  flex-direction: column;\n  transition: all 0.3s ease-out;\n\n  body.light-mode & {\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n  }\n\n  body.light-mode &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  body.dark-mode & {\n    background-color: #3b3b3c;\n    border: 1px solid #515151;\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`;\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-400);\n`;\n\nconst PostListMeta = styled.div`\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  color: inherit;\n  background-color: rgba(255, 255, 255, 0.4);\n  text-decoration: none;\n  border-radius: 0px;\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  text-transform: uppercase;\n  border-radius: 4px;\n`;\n\nexport default StyledLink;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst toKebabCase = (str) => {\r\n  return str\r\n    ?.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n    ?.map((x) => x.toLowerCase())\r\n    ?.join(\"-\");\r\n};\r\n\r\nconst Tags = ({ tags }) => {\r\n  return (\r\n    <div>\r\n      {tags &&\r\n        tags.map((tag) => {\r\n          return (\r\n            <Tag key={tag}>\r\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\r\n            </Tag>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nconst Tag = styled.span`\r\n  margin-right: 0.6rem;\r\n  margin-bottom: 0.6rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n\r\n  & a {\r\n    position: relative;\r\n    z-index: 2;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding: 0.2rem 0.6rem;\r\n    border: 1px solid rgba(255, 255, 255, 1);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  & a:hover {\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n\r\n  body.light-mode & a {\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n  }\r\n\r\n  body.light-mode & a:hover {\r\n    background-color: rgba(255, 255, 255, 1);\r\n  }\r\n\r\n  body.dark-mode & a {\r\n    background-color: #212122;\r\n    border: 1px solid #1a1a1b;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport PostList from \"../components/post-list\";\nimport StyledLink from \"../components/styled-link\";\nimport styled from \"styled-components\";\n\nconst TagsTemplate = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { totalCount } = data.allMarkdownRemark;\n  const posts = data.allMarkdownRemark.nodes;\n  const title = `Posts tagged ${tag}`;\n\n  return (\n    <Layout title={title}>\n      <TagsTemplateWrapper>\n        <Title>\n          {totalCount} posts tagged \"{tag}\"\n        </Title>\n        <Link\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n            color: inherit;\n            text-transform: uppercase;\n          `}\n          to=\"/tags\"\n        >\n          view all tags\n        </Link>\n        <PostList posts={posts} />\n\n        <StyledLink\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n          `}\n          to=\"/tags\"\n        >\n          View All tags\n        </StyledLink>\n      </TagsTemplateWrapper>\n    </Layout>\n  );\n};\n\nexport default TagsTemplate;\n\nconst TagsTemplateWrapper = styled.div`\n  padding-top: var(--size-900);\n`;\n\nconst Title = styled.h1`\n  font-size: var(--size-700);\n`;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fields: { contentType: { eq: \"posts\" } }\n      }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          tags\n          title\n        }\n        excerpt\n      }\n    }\n  }\n`;\n"],"names":["_ref","posts","PostList","map","_ref2","frontmatter","fields","excerpt","title","tags","date","description","slug","React","PostListItem","key","StyledPostList","_ref3","StyledPostListItem","Tags","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","styled","ul","withConfig","displayName","componentId","li","h2","p","div","StyledLink","tag","Tag","str","_str$match","match","_str$match$map","x","toLowerCase","join","span","pageContext","data","totalCount","allMarkdownRemark","nodes","Layout","TagsTemplateWrapper","Title","_StyledLink","_StyledStyledLink","h1"],"sourceRoot":""}