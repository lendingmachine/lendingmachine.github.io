{"version":3,"file":"component---src-templates-post-template-js-dee632d4bb0ebf0ed0a0.js","mappings":"mKA0BA,IAfaA,IAAe,IAAd,KAAEC,GAAMD,EACpB,OACEE,EAAAA,cAAA,WACGD,GACCA,EAAKE,KAAKC,IACR,OACEF,EAAAA,cAACG,EAAG,CAACC,IAAKF,GACRF,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAK,SAdJC,EAcwBL,EAbpCK,SACwE,QADrEC,EAAHD,EACHE,MAAM,6EAAqE,IAAAD,GAChD,QADgDE,EADxEF,EAEHP,KAAKU,GAAMA,EAAEC,uBAAc,IAAAF,OAFrB,EAAHA,EAGHG,KAAK,QAU2CX,IAdjCK,MAAQC,EAAAE,CAeX,IAGR,EAMV,MAAMP,EAAMW,EAAAA,QAAOC,KAAIC,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAXJ,CAAW,ojB,oFCiBvB,UAvCqBhB,IAAe,IAAd,KAAEqB,GAAMrB,EAC5B,MAAM,YAAEsB,EAAW,QAAEC,EAAO,KAAEC,GAASH,EAAKI,eACtCC,EAAOL,EAAKK,KACZC,EAAON,EAAKM,KAElB,OACEzB,EAAAA,cAAC0B,EAAAA,EAAM,CACLC,MAAOP,EAAYO,MACnBC,YAAaR,EAAYQ,aAAeP,GAExCrB,EAAAA,cAAC6B,EAAW,KACV7B,EAAAA,cAAA,eACEA,EAAAA,cAAC8B,EAAS,KAAEV,EAAYO,OACxB3B,EAAAA,cAAC+B,EAAQ,KAAEX,EAAYY,MAEvBhC,EAAAA,cAACiC,EAAW,CAACC,wBAAyB,CAAEC,OAAQb,MAGlDtB,EAAAA,cAACoC,EAAc,KACZZ,GACCxB,EAAAA,cAAA,WACEA,EAAAA,cAAA,YAAM,YACNA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAIkB,EAAKa,OAAOC,MAAM,IAAEd,EAAKJ,YAAYO,QAIlDF,GACCzB,EAAAA,cAAA,WACEA,EAAAA,cAAA,YAAM,QACNA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAImB,EAAKY,OAAOC,MAAM,IAAEb,EAAKL,YAAYO,SAIrD3B,EAAAA,cAACuC,EAAAA,EAAI,CAACxC,KAAMqB,EAAYrB,QAEnB,EAMb,MAAM8B,EAAcf,EAAAA,QAAO0B,IAAGxB,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,wIASxBgB,EAAYhB,EAAAA,QAAO2B,GAAEzB,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAATJ,CAAS,gCAIrBiB,EAAWjB,EAAAA,QAAOC,KAAIC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAXJ,CAAW,yFAOtBmB,EAAcnB,EAAAA,QAAO4B,QAAO1B,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAdJ,CAAc,8jBA2D5BsB,EAAiBtB,EAAAA,QAAO6B,IAAG3B,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAVJ,CAAU,yoB","sources":["webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/post-template.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst toKebabCase = (str) => {\r\n  return str\r\n    ?.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n    ?.map((x) => x.toLowerCase())\r\n    ?.join(\"-\");\r\n};\r\n\r\nconst Tags = ({ tags }) => {\r\n  return (\r\n    <div>\r\n      {tags &&\r\n        tags.map((tag) => {\r\n          return (\r\n            <Tag key={tag}>\r\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\r\n            </Tag>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nconst Tag = styled.span`\r\n  margin-right: 0.6rem;\r\n  margin-bottom: 0.6rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n\r\n  & a {\r\n    position: relative;\r\n    z-index: 2;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding: 0.2rem 0.6rem;\r\n    border: 1px solid rgba(255, 255, 255, 1);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  & a:hover {\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n\r\n  body.light-mode & a {\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n  }\r\n\r\n  body.light-mode & a:hover {\r\n    background-color: rgba(255, 255, 255, 1);\r\n  }\r\n\r\n  body.dark-mode & a {\r\n    background-color: #212122;\r\n    border: 1px solid #1a1a1b;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport styled from \"styled-components\";\nimport Tags from \"../components/tags\";\n\nconst PostTemplate = ({ data }) => {\n  const { frontmatter, excerpt, html } = data.markdownRemark;\n  const prev = data.prev;\n  const next = data.next;\n\n  return (\n    <Layout\n      title={frontmatter.title}\n      description={frontmatter.description || excerpt}\n    >\n      <PostWrapper>\n        <article>\n          <PostTitle>{frontmatter.title}</PostTitle>\n          <PostDate>{frontmatter.date}</PostDate>\n\n          <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n\n        <PostPagination>\n          {prev && (\n            <div>\n              <span>previous</span>\n              <Link to={prev.fields.slug}> {prev.frontmatter.title}</Link>\n            </div>\n          )}\n\n          {next && (\n            <div>\n              <span>next</span>\n              <Link to={next.fields.slug}> {next.frontmatter.title}</Link>\n            </div>\n          )}\n        </PostPagination>\n        <Tags tags={frontmatter.tags} />\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nconst PostWrapper = styled.div`\n  padding-top: var(--size-900);\n  padding-bottom: var(--size-900);\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 70ch;\n  word-wrap: break-word;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: var(--size-700);\n`;\n\nconst PostDate = styled.span`\n  font-size: var(--size-400);\n  display: block;\n  margin-top: 0.5rem;\n  text-transform: uppercase;\n`;\n\nconst PostContent = styled.section`\n  padding-top: var(--size-800);\n\n  & > * + * {\n    margin-top: var(--size-300);\n  }\n\n  & > p + p {\n    margin-top: var(--size-700);\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: var(--size-900);\n  }\n\n  h1 {\n    font-size: var(--size-700);\n  }\n\n  h2 {\n    font-size: var(--size-600);\n  }\n\n  h3 {\n    font-size: var(--size-500);\n  }\n\n  b,\n  strong {\n    font-weight: 600;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: underline;\n    text-decoration-thickness: 0.125rem;\n  }\n\n  blockquote {\n    padding-left: var(--size-400);\n    border-left: 5px solid;\n    font-style: italic;\n  }\n\n  code {\n    font-family: \"Source Sans Pro\", monospace;\n    overflow-x: auto;\n    white-space: pre-wrap;\n  }\n\n  pre {\n    overflow-x: auto;\n    white-space: pre-wrap;\n    max-width: 100%;\n  }\n`;\n\nconst PostPagination = styled.nav`\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n  margin-top: var(--size-900);\n\n  & > * {\n    position: relative;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n    margin-bottom: 1rem;\n  }\n\n  & > *:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  & span {\n    text-transform: uppercase;\n    opacity: 0.6;\n    font-size: var(--size-400);\n    padding-bottom: var(--size-500);\n  }\n\n  & a {\n    color: inherit;\n    text-decoration: none;\n    font-size: var(--size-400);\n    text-transform: capitalize;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!, $prevSlug: String, $nextSlug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["_ref","tags","React","map","tag","Tag","key","Link","to","str","_str$match","match","_str$match$map","x","toLowerCase","join","styled","span","withConfig","displayName","componentId","data","frontmatter","excerpt","html","markdownRemark","prev","next","Layout","title","description","PostWrapper","PostTitle","PostDate","date","PostContent","dangerouslySetInnerHTML","__html","PostPagination","fields","slug","Tags","div","h1","section","nav"],"sourceRoot":""}