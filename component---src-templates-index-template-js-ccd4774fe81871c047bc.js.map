{"version":3,"file":"component---src-templates-index-template-js-ccd4774fe81871c047bc.js","mappings":"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","sources":["webpack://gatsby-starter-glass/./src/components/post-list.js","webpack://gatsby-starter-glass/./src/components/styled-link.js","webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/index-template.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\nimport Tags from \"./tags\";\r\n\r\nconst PostList = ({ posts }) => {\r\n  const PostList = posts.map(({ frontmatter, fields, excerpt }) => {\r\n    const { title, tags, date, description } = frontmatter;\r\n    const { slug } = fields;\r\n\r\n    return (\r\n      <PostListItem\r\n        key={slug}\r\n        tags={tags}\r\n        title={title}\r\n        date={date}\r\n        slug={slug}\r\n        description={description}\r\n        excerpt={excerpt}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <StyledPostList>{PostList}</StyledPostList>;\r\n};\r\n\r\nexport default PostList;\r\n\r\nconst PostListItem = ({ title, date, tags, excerpt, description, slug }) => {\r\n  return (\r\n    <StyledPostListItem>\r\n      <Tags tags={tags} />\r\n\r\n      <PostListTitle>\r\n        <Link to={slug}>{title}</Link>\r\n      </PostListTitle>\r\n      <PostListExcerpt\r\n        dangerouslySetInnerHTML={{\r\n          __html: description || excerpt,\r\n        }}\r\n      />\r\n      <PostListMeta>\r\n        <span>{date}</span>\r\n      </PostListMeta>\r\n    </StyledPostListItem>\r\n  );\r\n};\r\n\r\nconst StyledPostList = styled.ul`\r\n  padding: 0;\r\n  list-style: none;\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-gap: var(--size-600);\r\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\r\n\r\n  @media screen and (max-width: 500px) {\r\n    & {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledPostListItem = styled.li`\r\n  display: flex;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  flex-direction: column;\r\n  transition: all 0.3s ease-out;\r\n\r\n  body.light-mode & {\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  body.light-mode &:hover {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n\r\n  body.dark-mode & {\r\n    background-color: #3b3b3c;\r\n    border: 1px solid #515151;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    & {\r\n      margin-top: var(--size-600);\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostListTitle = styled.h2`\r\n  line-height: 1.2;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  text-transform: capitalize;\r\n  font-size: var(--size-600);\r\n  font-weight: 700;\r\n\r\n  & a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  & a::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst PostListExcerpt = styled.p`\r\n  margin-top: auto;\r\n  font-size: var(--size-400);\r\n`;\r\n\r\nconst PostListMeta = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  font-size: var(--size-300);\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLink = styled(Link)`\r\n  padding: 0.5rem;\r\n  padding-left: 1.5rem;\r\n  padding-right: 1.5rem;\r\n  color: inherit;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n  text-decoration: none;\r\n  border-radius: 0px;\r\n  border: 1px solid rgba(255, 255, 255, 0.8);\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport default StyledLink;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst toKebabCase = (str) => {\r\n  return str\r\n    ?.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n    ?.map((x) => x.toLowerCase())\r\n    ?.join(\"-\");\r\n};\r\n\r\nconst Tags = ({ tags }) => {\r\n  return (\r\n    <div>\r\n      {tags &&\r\n        tags.map((tag) => {\r\n          return (\r\n            <Tag key={tag}>\r\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\r\n            </Tag>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nconst Tag = styled.span`\r\n  margin-right: 0.6rem;\r\n  margin-bottom: 0.6rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n\r\n  & a {\r\n    position: relative;\r\n    z-index: 2;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding: 0.2rem 0.6rem;\r\n    border: 1px solid rgba(255, 255, 255, 1);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  & a:hover {\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n\r\n  body.light-mode & a {\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n  }\r\n\r\n  body.light-mode & a:hover {\r\n    background-color: rgba(255, 255, 255, 1);\r\n  }\r\n\r\n  body.dark-mode & a {\r\n    background-color: #212122;\r\n    border: 1px solid #1a1a1b;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport PostList from \"../components/post-list\";\r\nimport styled from \"styled-components\";\r\nimport StyledLink from \"../components/styled-link\";\r\n\r\nconst HomePage = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.nodes;\r\n  const intro = data.markdownRemark.html;\r\n  const title = data.markdownRemark.frontmatter.title;\r\n\r\n  return (\r\n    <Layout title={title}>\r\n      <Intro\r\n        dangerouslySetInnerHTML={{\r\n          __html: intro,\r\n        }}\r\n      />\r\n\r\n      <PostList posts={posts} />\r\n      <StyledLink\r\n        css={`\r\n          display: block;\r\n          margin-top: var(--size-800);\r\n          margin-bottom: var(--size-800);\r\n          margin-left: auto;\r\n          margin-right: auto;\r\n          width: fit-content;\r\n        `}\r\n        to=\"/blog\"\r\n      >\r\n        View All posts\r\n      </StyledLink>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst Intro = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 60ch;\r\n  align-items: center;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-top: var(--size-800);\r\n  margin-bottom: var(--size-900);\r\n  text-align: center;\r\n\r\n  & p {\r\n    text-transform: capitalize;\r\n    font-size: var(--size-400);\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    & h1 {\r\n      font-size: var(--size-700);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const pageQuery = graphql`\r\n  query ($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fields: { contentType: { eq: \"posts\" } } }\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n      limit: 9\r\n    ) {\r\n      nodes {\r\n        fields {\r\n          slug\r\n        }\r\n        excerpt\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          description\r\n          title\r\n          tags\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","posts","PostList","map","_ref2","frontmatter","fields","excerpt","title","tags","date","description","slug","React","PostListItem","key","StyledPostList","_ref3","StyledPostListItem","Tags","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","styled","ul","withConfig","displayName","componentId","li","h2","p","div","StyledLink","tag","Tag","str","_str$match","match","_str$match$map","x","toLowerCase","join","span","data","allMarkdownRemark","nodes","intro","markdownRemark","html","Layout","Intro","_StyledStyledLink"],"sourceRoot":""}