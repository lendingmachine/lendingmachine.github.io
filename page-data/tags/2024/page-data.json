{"componentChunkName":"component---src-templates-tags-template-js","path":"/tags/2024/","result":{"data":{"allMarkdownRemark":{"totalCount":3,"nodes":[{"fields":{"slug":"/blog/HTTP 1.1/"},"frontmatter":{"date":"January 30, 2024","description":"HTTP에 대한 설명 및 사용되는 속성 정리","tags":["frontend","프론트엔드","HTTP","2024"],"title":"HTTP 구조에 대해"},"excerpt":"HTTP 클라이언트 / 서버 모델을 따르는 프로토콜로 TCP/IP 프로토콜 위에서 동작합니다. 이때 웹에서 필요한 모든 종류의 데이터 HTML, 이미지, 오디오 등을 전송합니다. 1. HTTP 1.1 구조에 대해 1.1 request 구조 HTTP…"},{"fields":{"slug":"/blog/observer-pattern/"},"frontmatter":{"date":"January 30, 2024","description":"여러 객체에 자신이 관찰 중인 객체에 발생하는 모든 이벤트에 대하여 알리는 구독 메커니즘을 정의할 수 있도록 합니다.","tags":["design pattern","observer pattenr","2024"],"title":"Observer Pattern"},"excerpt":"Observer Pattern  Problem…"},{"fields":{"slug":"/blog/마이크로 프론트엔드/"},"frontmatter":{"date":"January 30, 2024","description":"프론트엔드 아키텍쳐의 발전 과정과 마이크로 프론트엔드에 대한 설명","tags":["frontend","프론트엔드","마이크로 프론트엔드","2024"],"title":"마이크로 프론트엔드"},"excerpt":"1. 마이크로 서비스란? 일반적으로 복잡한 문제를 해결할 때 가장 효율적인 방식은 문제는 작게 나누어 작은 문제를 해결하는 방식입니다. 데이터 단위로 작게 나누어 작은 문제를 하나씩 해결을 해나가는게 마이크로 서비스의 개념입니다.…"}]}},"pageContext":{"tag":"2024"}},"staticQueryHashes":["2714594843","3159585216"]}